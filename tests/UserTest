<?php

namespace App\Tests;

use App\Entity\User;
use App\Repository\UserRepository;
use App\Service\UserService;
use PHPUnit\Framework\TestCase;
use Psr\Log\LoggerInterface;

class UserServiceTest extends TestCase
{
    private UserRepository $userRepository;
    private LoggerInterface $logger;

    protected function setUp(): void
    {
        $this->userRepository = $this->createMock(UserRepository::class);
        $this->logger = $this->createMock(LoggerInterface::class);
    }


     @covers UserService::registerUser
     @covers UserService::__construct

    public function testRegisterUser(): void
    {
        $service = new UserService(
            $this->userRepository,
            $this->logger,
        );

        $user = new User();
        $user->setUsername('testuser');
        $user->setEmail('test@example.com');
        $user->setPassword('password'); // Ideally, you would hash the password

        $this->userRepository->expects($this->once())
            ->method('save')
            ->with($user);

        $this->logger->expects($this->once())->method('info');

        $registeredUser = $service->registerUser($user);

        $this->assertInstanceOf(User::class, $registeredUser);
        $this->assertEquals('testuser', $registeredUser->getUsername());
        $this->assertEquals('test@example.com', $registeredUser->getEmail());
      
    }
}
